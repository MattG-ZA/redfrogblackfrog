{"version":3,"sources":["logic/GameInit.js","components/Card/Card.js","components/PlayerCardWrapper/PlayerCardWrapper.js","components/CentreCardWrapper/CentreCardWrapper.js","components/PlayingArea/PlayingArea.js","components/App.js","index.js"],"names":["GetCardDisplay","value","displayValue","rotateCard","card","totalCards","transformCard","type","degrees","total","translate","suit","concat","index","totalCardsSplit","Math","floor","Card","_ref","cardClass","showFace","react_default","a","createElement","style","transform","className","display","PlayerCardWrapper","props","player","playerHand","map","components_Card_Card","key","length","CentreCardWrapper","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addCard","circleCards","state","push","setState","removeCard","splice","bind","assertThisInitialized","_this2","onClick","React","Component","PlayingArea","shuffledDeck","deck","i","randomCardIndex","random","selectedCard","GameInit","suits","j","playerHands","first","second","deckSize","console","log","components_PlayerCardWrapper_PlayerCardWrapper","components_CentreCardWrapper_CentreCardWrapper","App","components_PlayingArea_PlayingArea","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.89315441.chunk.js","sourcesContent":["export const buildCardDeck = () => {\r\n    const suits = ['clubs', 'diamonds', 'hearts', 'spades'];\r\n    const deck = [];\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n        for (let j = 1; j < 14; j++) {\r\n            deck.push({\r\n                value: j,\r\n                suit: suits[i],\r\n                display: GetCardDisplay(j),\r\n                showFace: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    return deck;\r\n};\r\n\r\nconst GetCardDisplay = (value) => {\r\n    let displayValue = '';\r\n\r\n    switch (value) {\r\n        case 1:\r\n            displayValue = 'A';\r\n            break;\r\n        case 11:\r\n            displayValue = 'J';\r\n            break;\r\n        case 12:\r\n            displayValue = 'Q';\r\n            break;\r\n        case 13:\r\n            displayValue = 'K';\r\n            break;\r\n        default:\r\n            displayValue = value;\r\n    }\r\n\r\n    return displayValue;\r\n};\r\n\r\nexport const shuffleCardDeck = (deck) => {\r\n    const shuffledDeck = [];\r\n\r\n    for (let i = 52; i > 0; i--) {\r\n        const randomCardIndex = Math.floor(Math.random() * i);\r\n        const selectedCard = deck[randomCardIndex];\r\n\r\n        shuffledDeck.push(selectedCard);\r\n        deck.splice(randomCardIndex, 1);\r\n    }\r\n\r\n    return shuffledDeck;\r\n};\r\n\r\nexport const dealOpeningCircle = (deck) => {\r\n    let circleCards = [];\r\n    circleCards.push({ value: 0, suit: \"deckCard\", display: 0, showFace: false, index: 0 });\r\n    circleCards = circleCards.concat(deck.splice(deck.length - 12, deck.length));\r\n\r\n    return circleCards;\r\n}\r\n\r\nexport const dealPlayerHands = (deck) => {\r\n    const playerHands = {\r\n        first: [],\r\n        second: [],\r\n    };\r\n\r\n    const deckSize = deck.length;\r\n\r\n    for (let i = deckSize - 1; i > deckSize - 15; i--) {\r\n        if (i % 2 === 0) {\r\n            deck[i].showFace = false;\r\n            playerHands.second.push(deck[i]);\r\n        }\r\n        else {\r\n            playerHands.first.push(deck[i]);\r\n        }\r\n\r\n        deck.splice(i, 1);\r\n    }\r\n\r\n    return playerHands;\r\n}","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst rotateCard = (card, totalCards) => {\r\n    let transformCard = 'none';\r\n    \r\n    if (totalCards.type === 'centreCards') {\r\n        const degrees = 360 / (totalCards.total - 1);\r\n        // Ensure the deck card stays in the centre\r\n        const translate = card.suit === 'deckCard' ? 0 : 15;\r\n\r\n        transformCard = `rotate(${card.index * degrees}deg) translate(${translate}em) rotate(${360 - (card.index * degrees)}deg)`;\r\n    }\r\n    else if (totalCards.type === 'playerCards') {\r\n        const totalCardsSplit = Math.floor(totalCards.total / 2);\r\n        const degrees = 35 / totalCardsSplit;\r\n\r\n        // Change the rotation of cards slightly for an even hand\r\n        if ((totalCards.total) / 2 % 1 === 0 && card.index >= totalCardsSplit) {\r\n            card.index += 1;\r\n        }\r\n\r\n        transformCard = `rotate(${(card.index * degrees) - 35}deg)`;\r\n    }\r\n\r\n    return transformCard;\r\n}\r\n\r\nconst Card = ({ card, totalCards }) => {\r\n    let cardClass = card.showFace ? `card suit${card.suit}` : 'card back';\r\n\r\n    if (card.suit === 'deckCard') {\r\n        cardClass += ' centre';\r\n    }\r\n\r\n    return (\r\n        <span style={{ transform: rotateCard(card, totalCards) }} className={cardClass}>\r\n            <span>\r\n                {card.showFace && <p>{card.display}</p>}\r\n            </span>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport './PlayerCardWrapper.scss';\r\nimport Card from '../Card/Card';\r\n\r\nconst PlayerCardWrapper = (props) => {\r\n    return (\r\n        <div className={\"player-card-wrapper \" + props.player}>\r\n            {props.playerHand.map((card, index) => {\r\n                card.index = index;\r\n                return <Card key={index} card={card} totalCards={{total: props.playerHand.length, type: 'playerCards'}} />\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayerCardWrapper;","import React from 'react';\r\nimport './CentreCardWrapper.scss';\r\nimport Card from '../Card/Card';\r\n\r\nclass CentreCardWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { circleCards: props.circleCards };\r\n\r\n        this.addCard = this.addCard.bind(this);\r\n        this.removeCard = this.removeCard.bind(this);\r\n    }\r\n\r\n    // Test only code\r\n    addCard = () => {\r\n        const circleCards = this.state.circleCards;\r\n        circleCards.push({ value: 10, suit: \"hearts\", display: 10, showFace: true, index: circleCards.length });\r\n        this.setState({ circleCards });\r\n    }\r\n\r\n    removeCard = () => {\r\n        let circleCards = this.state.circleCards;\r\n        circleCards.splice(circleCards.length - 1, 1);\r\n        this.setState({ circleCards });\r\n    }\r\n    // End of test only code\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <button style={{ display: 'block' }} onClick={this.addCard}>Add</button>\r\n                <button style={{ display: 'block' }} onClick={this.removeCard}>Remove</button >\r\n                \r\n                <div className='circle-container'>\r\n                    {this.state.circleCards.map((card, index) => {\r\n                        card.index = index;\r\n                        return <Card key={index} card={card} totalCards={{total: this.state.circleCards.length, type: 'centreCards'}} />\r\n                    })}\r\n                </div>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CentreCardWrapper;","import React from 'react';\r\nimport './PlayingArea.css';\r\nimport * as GameInit from '../../logic/GameInit';\r\nimport PlayerCardWrapper from '../PlayerCardWrapper/PlayerCardWrapper';\r\nimport CentreCardWrapper from '../CentreCardWrapper/CentreCardWrapper';\r\n\r\nclass PlayingArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const deck = GameInit.buildCardDeck();\r\n        const shuffledDeck = GameInit.shuffleCardDeck(deck);\r\n        const circleCards = GameInit.dealOpeningCircle(shuffledDeck);\r\n        const playerHands = GameInit.dealPlayerHands(shuffledDeck);\r\n\r\n        console.log('deck ', shuffledDeck);\r\n        console.log('circle ', circleCards);\r\n        console.log('hands ', playerHands);\r\n\r\n        return (\r\n            <span className=\"playing-area\">\r\n                <PlayerCardWrapper playerHand={playerHands.second} player={\"player-two\"} />\r\n                <CentreCardWrapper circleCards={circleCards} />\r\n                <PlayerCardWrapper playerHand={playerHands.first} player={\"player-one\"} />\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayingArea;","import React, { Component } from 'react';\nimport PlayingArea from './PlayingArea/PlayingArea';\n\nclass App extends Component {\n  render() {\n    return <PlayingArea />;\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}