{"version":3,"sources":["logic/GameInit.js","components/Card/Card.js","components/PlayerCardWrapper/PlayerCardWrapper.js","components/CentreCardWrapper/CentreCardWrapper.js","components/PlayingArea/PlayingArea.js","components/App.js","index.js"],"names":["GetCardDisplay","value","displayValue","BuildCardClass","card","cardClass","showFace","concat","suit","BuildCardStyle","totalCards","cardStyle","transform","transformCard","type","degrees","total","translate","index","totalCardsSplit","Math","floor","RotateCard","highlight","zoom","zIndex","boxShadow","Card","_ref","selectCard","react_default","a","createElement","onClick","style","className","display","PlayerCardWrapper","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playerHand","console","log","forEach","setState","highlightCard","state","_this2","_this$props","player","map","components_Card_Card","key","length","React","Component","CentreCardWrapper","addCard","circleCards","push","removeCard","splice","PlayingArea","shuffledDeck","deck","i","randomCardIndex","random","selectedCard","ShuffleCardDeck","suits","j","BuildCardDeck","DealOpeningCircle","playerHands","first","second","deckSize","DealPlayerHands","components_PlayerCardWrapper_PlayerCardWrapper","components_CentreCardWrapper_CentreCardWrapper","App","components_PlayingArea_PlayingArea","ReactDOM","render","components_App","document","getElementById"],"mappings":"yTAmBMA,SAAiB,SAACC,GACpB,IAAIC,EAAe,GAEnB,OAAQD,GACJ,KAAK,EACDC,EAAe,IACf,MACJ,KAAK,GACDA,EAAe,IACf,MACJ,KAAK,GACDA,EAAe,IACf,MACJ,KAAK,GACDA,EAAe,IACf,MACJ,QACIA,EAAeD,EAGvB,OAAOC,ICXLC,eAAiB,SAACC,GACpB,IAAIC,EAAYD,EAAKE,SAAL,YAAAC,OAA4BH,EAAKI,MAAS,YAM1D,MAJkB,aAAdJ,EAAKI,OACLH,GAAa,WAGVA,IAGLI,EAAiB,SAACL,EAAMM,GAC1B,IAAIC,EAAY,GAUhB,OARAA,EAAUC,UAtCK,SAACR,EAAMM,GACtB,IAAIG,EAAgB,OAEpB,GAAwB,gBAApBH,EAAWI,KAAwB,CACnC,IAAMC,EAAU,KAAOL,EAAWM,MAAQ,GAEpCC,EAA0B,aAAdb,EAAKI,KAAsB,EAAI,GAEjDK,EAAa,UAAAN,OAAaH,EAAKc,MAAQH,EAA1B,mBAAAR,OAAmDU,EAAnD,eAAAV,OAA0E,IAAOH,EAAKc,MAAQH,EAA9F,aAEZ,GAAwB,gBAApBL,EAAWI,KAAwB,CACxC,IAAMK,EAAkBC,KAAKC,MAAMX,EAAWM,MAAQ,GAChDD,EAAU,GAAKI,EAGhBT,EAAWM,MAAS,EAAI,IAAM,GAAKZ,EAAKc,OAASC,IAClDf,EAAKc,OAAS,GAGlBL,EAAa,UAAAN,OAAcH,EAAKc,MAAQH,EAAW,GAAtC,QAGjB,OAAOF,EAgBeS,CAAWlB,EAAMM,GAEnCN,EAAKmB,YACLZ,EAAUa,KAAO,IACjBb,EAAUc,OAAS,IACnBd,EAAUe,UAAY,+BAGnBf,GAaIgB,EAVF,SAAAC,GAAsC,IAAnCxB,EAAmCwB,EAAnCxB,KAAMM,EAA6BkB,EAA7BlB,WAAYmB,EAAiBD,EAAjBC,WAC9B,OACIC,EAAAC,EAAAC,cAAA,QAAMC,QAAS,kBAAMJ,EAAWzB,IAAO8B,MAAOzB,EAAeL,EAAMM,GAAayB,UAAWhC,EAAeC,IACtG0B,EAAAC,EAAAC,cAAA,YACK5B,EAAKE,UAAYwB,EAAAC,EAAAC,cAAA,SAAI5B,EAAKgC,YCZ5BC,cAvCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAIVT,WAAa,SAACzB,GACV,GAAIA,EAAKE,SAAU,KACPwC,EAAeP,EAAKD,MAApBQ,WAERC,QAAQC,IAAI,gBAAiB5C,GAE7B0C,EAAWG,QAAQ,SAAA7C,GACfA,EAAKmB,WAAY,IAGrBnB,EAAKmB,WAAY,EACjBgB,EAAKW,SAAS,CAACC,cAAe/C,MAdlCmC,EAAKa,MAAQ,CAAED,cAAe,IAFfZ,wEAoBV,IAAAc,EAAAX,KAAAY,EAC0BZ,KAAKJ,MAA5BQ,EADHQ,EACGR,WAAYS,EADfD,EACeC,OAEpB,OACIzB,EAAAC,EAAAC,cAAA,OAAKG,UAAW,uBAAyBoB,GACpCT,EAAWU,IAAI,SAACpD,EAAMc,GAEnB,OADAd,EAAKc,MAAQA,EACNY,EAAAC,EAAAC,cAACyB,EAAD,CACHC,IAAKxC,EACLd,KAAMA,EACNM,WAAY,CAAEM,MAAO8B,EAAWa,OAAQ7C,KAAM,eAC9Ce,WAAYwB,EAAKxB,uBAhCT+B,IAAMC,WCqCvBC,qBApCX,SAAAA,EAAYxB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoB,IACfvB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsB,GAAAjB,KAAAH,KAAMJ,KAKVyB,QAAU,WACN,IAAMC,EAAczB,EAAKa,MAAMY,YAC/BA,EAAYC,KAAK,CAAEhE,MAAO,GAAIO,KAAM,SAAU4B,QAAS,GAAI9B,UAAU,EAAMY,MAAO8C,EAAYL,SAC9FpB,EAAKW,SAAS,CAAEc,iBATDzB,EAYnB2B,WAAa,WACT,IAAIF,EAAczB,EAAKa,MAAMY,YAC7BA,EAAYG,OAAOH,EAAYL,OAAS,EAAG,GAC3CpB,EAAKW,SAAS,CAAEc,iBAbhBzB,EAAKa,MAAQ,CAAEY,YAAa1B,EAAM0B,aAFnBzB,wEAmBV,IAAAc,EAAAX,KACL,OACIZ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAEE,QAAS,SAAWH,QAASS,KAAKqB,SAAnD,OACAjC,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAEE,QAAS,SAAWH,QAASS,KAAKwB,YAAnD,UAEApC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACVO,KAAKU,MAAMY,YAAYR,IAAI,SAACpD,EAAMc,GAE/B,OADAd,EAAKc,MAAQA,EACNY,EAAAC,EAAAC,cAACyB,EAAD,CAAMC,IAAKxC,EAAOd,KAAMA,EAAMM,WAAY,CAACM,MAAOqC,EAAKD,MAAMY,YAAYL,OAAQ7C,KAAM,4BA7BtF8C,IAAMC,YC4BvBO,cAzBX,SAAAA,EAAY9B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACf7B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,KAAMJ,KACDc,MAAQ,GAFEb,wEAMf,IACM8B,EJ4BiB,SAACC,GAG5B,IAFA,IAAMD,EAAe,GAEZE,EAAI,GAAIA,EAAI,EAAGA,IAAK,CACzB,IAAMC,EAAkBpD,KAAKC,MAAMD,KAAKqD,SAAWF,GAC7CG,EAAeJ,EAAKE,GAE1BH,EAAaJ,KAAKS,GAClBJ,EAAKH,OAAOK,EAAiB,GAGjC,OAAOH,EIvCkBM,CJdA,WAIzB,IAHA,IAAMC,EAAQ,CAAC,QAAS,WAAY,SAAU,UACxCN,EAAO,GAEJC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIM,EAAI,EAAGA,EAAI,GAAIA,IACpBP,EAAKL,KAAK,CACNhE,MAAO4E,EACPrE,KAAMoE,EAAML,GACZnC,QAASpC,EAAe6E,GACxBvE,UAAU,EACViB,WAAW,IAKvB,OAAO+C,EIHUQ,IAEPd,EJyCmB,SAACM,GAC9B,IAAIN,EAAc,GAIlB,OAHAA,EAAYC,KAAK,CAAEhE,MAAO,EAAGO,KAAM,WAAY4B,QAAS,EAAG9B,UAAU,EAAOY,MAAO,IACnF8C,EAAcA,EAAYzD,OAAO+D,EAAKH,OAAOG,EAAKX,OAAS,GAAIW,EAAKX,SI5C5CoB,CAAkBV,GAChCW,EJgDiB,SAACV,GAQ5B,IAPA,IAAMU,EAAc,CAChBC,MAAO,GACPC,OAAQ,IAGNC,EAAWb,EAAKX,OAEbY,EAAIY,EAAW,EAAGZ,EAAIY,EAAW,GAAIZ,IACtCA,EAAI,IAAM,GACVD,EAAKC,GAAGjE,UAAW,EACnB0E,EAAYE,OAAOjB,KAAKK,EAAKC,KAG7BS,EAAYC,MAAMhB,KAAKK,EAAKC,IAGhCD,EAAKH,OAAOI,EAAG,GAGnB,OAAOS,EIpEiBI,CAAgBf,GAMpC,OAJAtB,QAAQC,IAAI,QAASqB,GACrBtB,QAAQC,IAAI,UAAWgB,GACvBjB,QAAQC,IAAI,SAAUgC,GAGlBlD,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gBACZL,EAAAC,EAAAC,cAACqD,EAAD,CAAmBvC,WAAYkC,EAAYE,OAAQ3B,OAAQ,eAC3DzB,EAAAC,EAAAC,cAACsD,EAAD,CAAmBtB,YAAaA,IAChClC,EAAAC,EAAAC,cAACqD,EAAD,CAAmBvC,WAAYkC,EAAYC,MAAO1B,OAAQ,uBApBhDK,IAAMC,WCGjB0B,mLAJX,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,aAFO3B,aCElB4B,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8f9dd1aa.chunk.js","sourcesContent":["export const BuildCardDeck = () => {\r\n    const suits = ['clubs', 'diamonds', 'hearts', 'spades'];\r\n    const deck = [];\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n        for (let j = 1; j < 14; j++) {\r\n            deck.push({\r\n                value: j,\r\n                suit: suits[i],\r\n                display: GetCardDisplay(j),\r\n                showFace: true,\r\n                highlight: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    return deck;\r\n};\r\n\r\nconst GetCardDisplay = (value) => {\r\n    let displayValue = '';\r\n\r\n    switch (value) {\r\n        case 1:\r\n            displayValue = 'A';\r\n            break;\r\n        case 11:\r\n            displayValue = 'J';\r\n            break;\r\n        case 12:\r\n            displayValue = 'Q';\r\n            break;\r\n        case 13:\r\n            displayValue = 'K';\r\n            break;\r\n        default:\r\n            displayValue = value;\r\n    }\r\n\r\n    return displayValue;\r\n};\r\n\r\nexport const ShuffleCardDeck = (deck) => {\r\n    const shuffledDeck = [];\r\n\r\n    for (let i = 52; i > 0; i--) {\r\n        const randomCardIndex = Math.floor(Math.random() * i);\r\n        const selectedCard = deck[randomCardIndex];\r\n\r\n        shuffledDeck.push(selectedCard);\r\n        deck.splice(randomCardIndex, 1);\r\n    }\r\n\r\n    return shuffledDeck;\r\n};\r\n\r\nexport const DealOpeningCircle = (deck) => {\r\n    let circleCards = [];\r\n    circleCards.push({ value: 0, suit: 'deckCard', display: 0, showFace: false, index: 0 });\r\n    circleCards = circleCards.concat(deck.splice(deck.length - 12, deck.length));\r\n\r\n    return circleCards;\r\n}\r\n\r\nexport const DealPlayerHands = (deck) => {\r\n    const playerHands = {\r\n        first: [],\r\n        second: [],\r\n    };\r\n\r\n    const deckSize = deck.length;\r\n\r\n    for (let i = deckSize - 1; i > deckSize - 15; i--) {\r\n        if (i % 2 === 0) {\r\n            deck[i].showFace = false;\r\n            playerHands.second.push(deck[i]);\r\n        }\r\n        else {\r\n            playerHands.first.push(deck[i]);\r\n        }\r\n\r\n        deck.splice(i, 1);\r\n    }\r\n\r\n    return playerHands;\r\n}","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst RotateCard = (card, totalCards) => {\r\n    let transformCard = 'none';\r\n\r\n    if (totalCards.type === 'centreCards') {\r\n        const degrees = 360 / (totalCards.total - 1);\r\n        // Ensure the deck card stays in the centre\r\n        const translate = card.suit === 'deckCard' ? 0 : 15;\r\n\r\n        transformCard = `rotate(${card.index * degrees}deg) translate(${translate}em) rotate(${360 - (card.index * degrees)}deg)`;\r\n    }\r\n    else if (totalCards.type === 'playerCards') {\r\n        const totalCardsSplit = Math.floor(totalCards.total / 2);\r\n        const degrees = 35 / totalCardsSplit;\r\n\r\n        // Change the rotation of cards slightly for an even hand\r\n        if ((totalCards.total) / 2 % 1 === 0 && card.index >= totalCardsSplit) {\r\n            card.index += 1;\r\n        }\r\n\r\n        transformCard = `rotate(${(card.index * degrees) - 35}deg)`;\r\n    }\r\n\r\n    return transformCard;\r\n}\r\n\r\nconst BuildCardClass = (card) => {\r\n    let cardClass = card.showFace ? `card suit${card.suit}` : 'card back';\r\n\r\n    if (card.suit === 'deckCard') {\r\n        cardClass += ' centre';\r\n    }\r\n\r\n    return cardClass;\r\n}\r\n\r\nconst BuildCardStyle = (card, totalCards) => {\r\n    let cardStyle = {};\r\n\r\n    cardStyle.transform = RotateCard(card, totalCards);\r\n\r\n    if (card.highlight) {\r\n        cardStyle.zoom = 1.1;\r\n        cardStyle.zIndex = 1000;\r\n        cardStyle.boxShadow = '4px 4px 8px rgba(0,0,0,0.3)';\r\n    }\r\n\r\n    return cardStyle;\r\n}\r\n\r\nconst Card = ({ card, totalCards, selectCard }) => {\r\n    return (\r\n        <span onClick={() => selectCard(card)} style={BuildCardStyle(card, totalCards)} className={BuildCardClass(card)}>\r\n            <span>\r\n                {card.showFace && <p>{card.display}</p>}\r\n            </span>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport './PlayerCardWrapper.scss';\r\nimport Card from '../Card/Card';\r\n\r\nclass PlayerCardWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { highlightCard: {} };\r\n    }\r\n\r\n    selectCard = (card) => {\r\n        if (card.showFace) {\r\n            const { playerHand } = this.props;\r\n\r\n            console.log('Clicked card ', card);\r\n\r\n            playerHand.forEach(card => {\r\n                card.highlight = false;\r\n            });\r\n\r\n            card.highlight = true;\r\n            this.setState({highlightCard: card});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { playerHand, player } = this.props;\r\n\r\n        return (\r\n            <div className={'player-card-wrapper ' + player}>\r\n                {playerHand.map((card, index) => {\r\n                    card.index = index;\r\n                    return <Card\r\n                        key={index}\r\n                        card={card}\r\n                        totalCards={{ total: playerHand.length, type: 'playerCards' }}\r\n                        selectCard={this.selectCard}\r\n                    />\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PlayerCardWrapper;","import React from 'react';\r\nimport './CentreCardWrapper.scss';\r\nimport Card from '../Card/Card';\r\n\r\nclass CentreCardWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { circleCards: props.circleCards };\r\n    }\r\n\r\n    // Test only code\r\n    addCard = () => {\r\n        const circleCards = this.state.circleCards;\r\n        circleCards.push({ value: 10, suit: 'hearts', display: 10, showFace: true, index: circleCards.length });\r\n        this.setState({ circleCards });\r\n    }\r\n\r\n    removeCard = () => {\r\n        let circleCards = this.state.circleCards;\r\n        circleCards.splice(circleCards.length - 1, 1);\r\n        this.setState({ circleCards });\r\n    }\r\n    // End of test only code\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <button style={{ display: 'block' }} onClick={this.addCard}>Add</button>\r\n                <button style={{ display: 'block' }} onClick={this.removeCard}>Remove</button >\r\n                \r\n                <div className='circle-container'>\r\n                    {this.state.circleCards.map((card, index) => {\r\n                        card.index = index;\r\n                        return <Card key={index} card={card} totalCards={{total: this.state.circleCards.length, type: 'centreCards'}} />\r\n                    })}\r\n                </div>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CentreCardWrapper;","import React from 'react';\r\nimport './PlayingArea.css';\r\nimport { BuildCardDeck, ShuffleCardDeck, DealOpeningCircle, DealPlayerHands } from '../../logic/GameInit';\r\nimport PlayerCardWrapper from '../PlayerCardWrapper/PlayerCardWrapper';\r\nimport CentreCardWrapper from '../CentreCardWrapper/CentreCardWrapper';\r\n\r\nclass PlayingArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const deck = BuildCardDeck();\r\n        const shuffledDeck = ShuffleCardDeck(deck);\r\n        const circleCards = DealOpeningCircle(shuffledDeck);\r\n        const playerHands = DealPlayerHands(shuffledDeck);\r\n\r\n        console.log('deck ', shuffledDeck);\r\n        console.log('circle ', circleCards);\r\n        console.log('hands ', playerHands);\r\n\r\n        return (\r\n            <span className=\"playing-area\">\r\n                <PlayerCardWrapper playerHand={playerHands.second} player={\"player-two\"} />\r\n                <CentreCardWrapper circleCards={circleCards} />\r\n                <PlayerCardWrapper playerHand={playerHands.first} player={\"player-one\"} />\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayingArea;","import React, { Component } from 'react';\nimport PlayingArea from './PlayingArea/PlayingArea';\n\nclass App extends Component {\n  render() {\n    return <PlayingArea />;\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}